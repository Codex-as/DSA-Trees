class Solution
{
    //Function to find the vertical order traversal of Binary Tree.
    static ArrayList <Integer> verticalOrder(Node root)
    {
        Map<Integer , ArrayList<Integer>> map = new TreeMap<>();
       //Queue --> type pair
       Queue<pair> queue = new LinkedList<>();
       queue.add(new pair(0 , root));
       while(!queue.isEmpty()){
           pair cur = queue.poll();
           if(map.containsKey(cur.distance)){
               map.get(cur.distance).add(cur.root.data);
           }
           else{
               ArrayList<Integer> temp = new ArrayList<>();
               temp.add(cur.root.data);
               map.put( cur.distance ,temp);
           }
           if(cur.root.left != null){
               queue.add(new pair(cur.distance -1 , cur.root.left));
           }
           if(cur.root.right != null){
               queue.add(new pair(cur.distance + 1 , cur.root.right));
           }
       }
       ArrayList<Integer> ans = new ArrayList<>();
       for(Map.Entry<Integer , ArrayList<Integer>> entry : map.entrySet()){
           ans.addAll(entry.getValue());
       }
        return ans;
    }
   
}
class pair{
    Node root;
    int distance;
    pair(int distance , Node root){
        this.distance  = distance;
        this.root = root;
    }
}
