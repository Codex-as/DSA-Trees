class Solution
{
    
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root)
    {
      Map<Integer , Integer> map = new TreeMap<>();
      Queue<pair> queue = new LinkedList<>();
      queue.add(new pair(0 , root));
      while(!queue.isEmpty()){
          pair cur = queue.poll();
          if(!map.containsKey(cur.distance)){
              map.put(cur.distance , cur.root.data);
          }
          if(cur.root.left != null){
              queue.add(new pair(cur.distance - 1 , cur.root.left));
          }
          if(cur.root.right != null){
              queue.add(new pair(cur.distance + 1 , cur.root.right));
          }
      }
      ArrayList<Integer> ans = new ArrayList<>();
      for(Map.Entry<Integer , Integer> entry : map.entrySet()){
          ans.add(entry.getValue());
      }
      return ans;
        
    }
}

class pair{
    Node root;
    int distance;
    pair(int distance , Node root){
        this.distance = distance;
        this.root = root;
    }
}
